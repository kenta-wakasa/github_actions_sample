# GitHub Actionsのワークフロー構文
# https://docs.github.com/ja/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

# コンテキストおよび式の構文
# https://docs.github.com/ja/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions
# 文字列ではなく式として判定する ${{ <expression> }}

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
    # - 'FILE_NAME' # ここに列挙されたファイルがpushされても無視する
    - 'README.md'
    - analysis_options.yaml
    - '.gitignore'
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  #
  # Build for iOS
  #
  build_iOS: # jobに名前をつけられる

    name: Build for iOS # GitHubに表示されるジョブの名前
    runs-on: macos-latest # ジョブを実行するマシーンの種類

    steps: #一連のタスク
      # チェックアウト
      - name: Checks-out my repository 
        uses: actions/checkout@v2
      
      # Flutter のインストール
      - name: Install Flutter
        uses: subosito/flutter-action@v1
          with:
            flutter-version: '1.26.0'
      #   run: ./scripts/install_flutter.sh
      # - name: print FLUTTER_FULL_VERSION
      #   run: echo ${{ env.RELEASE_VERSION }} env.[] で変数にアクセスできる

      # パッケージのダウンロード
      - name: Download Flutter packages
        run: flutter pub get

      # 証明書の生成
      - name: Import Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          touch ~/Library/MobileDevice/Provisioning\ Profiles/sample_dist.mobileprovision
          echo -n '${{ secrets.PROVISIONING_PROFILE }}' | base64 -d -o ~/Library/MobileDevice/Provisioning\ Profiles/sample_dist.mobileprovision
    
      # 署名をする
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
      
      # ipa ファイルの出力
      - name: flutter build ipa 
        # GITHUB_RUN_NUMBER をビルドナンバーに指定することで被りがないようにしている。
        run: flutter build ipa --export-options-plist=ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}
      
      # AppStoreConnect にアップロードする
      - name: Upload to AppStoreConnect
        run: xcrun altool --upload-app -f "./build/ios/ipa/github_actios_sample.ipa" -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_APP_PASS }}" 
  
  
        # # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Runs a single command using the runners shell
  #     - name: Run a one-line script
  #       run: echo Hello, world!

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.
      
  #     # Slackに通知を送る
  #     # 参考: https://spinners.work/posts/github-actions-context/
  #     - name: Send notification to slack
  #       uses: tokorom/action-slack-incoming-webhook@main
  #       env:
  #         INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       with:
  #         text: Hello, Slack!